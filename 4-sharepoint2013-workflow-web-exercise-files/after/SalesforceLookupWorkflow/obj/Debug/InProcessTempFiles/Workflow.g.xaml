<?xml version="1.0" encoding="utf-8"?>
<sl:Workflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:p1="wf://workflow.windows.net/$Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sl="clr-namespace:SalesforceLookupWorkflow.Lookup_Customer_In_Salesforce_Workflow;assembly=SalesforceLookupWorkflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SalesforceLookupWorkflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sl:Workflow.Implementation>
    <Sequence DisplayName="ROOT">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="SfOAuthAccessToken" />
        <Variable x:TypeArguments="x:String" Name="SfOAuthInstanceUrl" />
        <Variable x:TypeArguments="x:String" Name="CustomerEmail" />
        <Variable x:TypeArguments="x:String" Name="CustomerFirstName" />
        <Variable x:TypeArguments="x:String" Name="CustomerLastName" />
      </Sequence.Variables>
      <Sequence DisplayName="Get Customer Email">
        <Sequence.Variables>
          <Variable x:TypeArguments="p:DynamicValue" Name="CustomerItemProperties" />
          <Variable x:TypeArguments="x:String" Name="CustomerFirstName" />
          <Variable x:TypeArguments="x:String" Name="CustomerLastName" />
        </Sequence.Variables>
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                <p1:GetCurrentItemId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                <p1:GetCurrentListId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">CustomerItemProperties</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="GetDynamicValueProperties">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">CustomerItemProperties</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="Title">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerEmail</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
      </Sequence>
      <Sequence DisplayName="Auth with Salesforce">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Default="https://login.salesforce.com/services/oauth2/token" Name="SfOAuthLoginUri" />
          <Variable x:TypeArguments="x:String" Default="74J4WJGz88687wxtcCZ9PyUxwMNKBQeAQ7kDf" Name="SfPassword" />
          <Variable x:TypeArguments="x:String" Default="me@andrewconnell.com" Name="SfUsername" />
          <Variable x:TypeArguments="x:String" Default="423539490261424249" Name="SfConsumerSecret" />
          <Variable x:TypeArguments="x:String" Default="3MVG9CVKiXR7Ri5ryjLzvbQBy3GcW3X_iYC5ecujT8zRtyj2jMoCp5HPmj.A7Q1bxBdY89jy0Ll5BSuqQO_hQ" Name="SfConsumerKey" />
          <Variable x:TypeArguments="p:DynamicValue" Name="SfOAuthResponse" />
          <Variable x:TypeArguments="x:String" Name="SfOAuthPayload" />
        </Sequence.Variables>
        <Assign DisplayName="Create OAuth From Submission Payload">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">SfOAuthPayload</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"grant_type=password&amp;client_id="+SfConsumerKey+"&amp;client_secret="+SfConsumerSecret+"&amp;username="+SfUsername+"&amp;password="+SfPassword</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p:HttpSend DisplayName="Authenticate with Salesforce" Method="POST" RetryOnConnectionFailure="False">
          <p:HttpSend.RequestContent>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">SfOAuthPayload</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.RequestContent>
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/x-www-form-urlencoded</InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">SfOAuthResponse</mca:CSharpReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">SfOAuthLoginUri</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperties DisplayName="Parse OAuth Token &amp; Salesforce Instance Endpoint">
          <p:GetDynamicValueProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">SfOAuthResponse</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="access_token">
              <mca:CSharpReference x:TypeArguments="x:String">SfOAuthAccessToken</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="instance_url">
              <mca:CSharpReference x:TypeArguments="x:String">SfOAuthInstanceUrl</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetDynamicValueProperties>
      </Sequence>
      <Sequence DisplayName="Get Customer from Salesforce">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="SfQuery" />
          <Variable x:TypeArguments="x:String" Name="SfQueryUri" />
          <Variable x:TypeArguments="p:DynamicValue" Name="SfQueryResponse" />
        </Sequence.Variables>
        <Assign DisplayName="Create Query">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">SfQuery</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"SELECT Lead.FirstName, Lead.LastName, Lead.Email FROM Lead WHERE Lead.Email='"+CustomerEmail+"'"</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Create Salesforce Query Request">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">SfQueryUri</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">SfOAuthInstanceUrl+"/services/data/v23.0/query?q="+SfQuery</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p:HttpSend DisplayName="Query Salesforce" Method="GET">
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">
                    <mca:CSharpValue x:TypeArguments="x:String">"OAuth "+SfOAuthAccessToken</mca:CSharpValue>
                  </InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">SfQueryResponse</mca:CSharpReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">SfQueryUri</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperties>
          <p:GetDynamicValueProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">SfQueryResponse</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="records/(0)/FirstName">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerFirstName</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="records/(0)/LastName">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerLastName</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetDynamicValueProperties>
      </Sequence>
      <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Customer Item">
        <p1:UpdateListItem.ItemId>
          <InArgument x:TypeArguments="x:Int32">
            <p:ExpressionContainerValue x:TypeArguments="x:Int32">
              <p1:GetCurrentItemId />
            </p:ExpressionContainerValue>
          </InArgument>
        </p1:UpdateListItem.ItemId>
        <p1:UpdateListItem.ListId>
          <InArgument x:TypeArguments="s:Guid">
            <p:ExpressionContainerValue x:TypeArguments="s:Guid">
              <p1:GetCurrentListId />
            </p:ExpressionContainerValue>
          </InArgument>
        </p1:UpdateListItem.ListId>
        <p1:UpdateListItem.ListItemPropertiesDynamicValue>
          <InArgument x:TypeArguments="p:DynamicValue">
            <p:SetDynamicValueProperties>
              <scg:Dictionary x:TypeArguments="x:String, InArgument">
                <InArgument x:TypeArguments="x:String" x:Key="FirstName1">
                  <mca:CSharpValue x:TypeArguments="x:String">CustomerFirstName</mca:CSharpValue>
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="LastNamePhonetic">
                  <mca:CSharpValue x:TypeArguments="x:String">CustomerLastName</mca:CSharpValue>
                </InArgument>
              </scg:Dictionary>
            </p:SetDynamicValueProperties>
          </InArgument>
        </p1:UpdateListItem.ListItemPropertiesDynamicValue>
      </p1:UpdateListItem>
      <sads:DebugSymbol.Symbol>d1BjOlxkZXZcU2FsZXNmb3JjZUxvb2t1cFdvcmtmbG93XExvb2t1cEN1c3RvbWVySW5TYWxlc2ZvcmNlV29ya2Zsb3dcV29ya2Zsb3cueGFtbDkqA/8BDgIBATIFWRADAegBWgWZARACAXSaAQXfARACARLgAQX9ARkCAQI4B0wdAwH8AU0HWB4DAekBXDZcagIBeV02XV0CAXheNl5MAgF3XzZfSgIBdmA2YI0BAgF1ZAdvEAMBzQFwB4kBFAMBogGKAQeYASUCAXqgAQerARACAWGsAQe3ARACAU64AQfPARQCAS/QAQfeASUCARPxAQv6ASkCAQXqAQvsASgCAQTjAQvlASgCAQNCDUQqAwGHAkkNSW8DAf4BOw09KgMB/QFQDVBnAwHzAVUNVWADAeoBbA1s3AEDAdsBZw1nYQMBzgF4DXwrAwHLAXMNc1kDAb4BhgENhgFaAwGxAYEBDYEBaAMBpAFwcnB4AwGjAZUBDZUBZQMBlQGSAQ2SAWUDAYgBjQENjQFgAgF7qAENqAGsAQIBa6MBDaMBWgIBYrQBDbQBhQECAVivAQ2vAV0CAU+7AQ3CASsCAUPMAQ3MAVUCATrHAQ3HAWgCATG4AWa4AWsCATDbAQ3bAWMCASbTAQ3TAWACAR3YAQ3YAWQCART3ARH3AV8CAQz0ARH0AWACAQbrAQ3rASQDAQQB5AEN5AEkAwEDAUMPQyYEAYcCATwPPCYEAf0BAXpNem4DAcwBvwETvwFsAgFFvQFNvQFdAgFE</sads:DebugSymbol.Symbol>
    </Sequence>
  </sl:Workflow.Implementation>
</sl:Workflow>
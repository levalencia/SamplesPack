<?xml version="1.0" encoding="utf-8"?>
<aa:Workflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:aa="clr-namespace:AnonReadSecureWrite.Add_Or_Update_Customer;assembly=AnonReadSecureWrite" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:p1="wf://workflow.windows.net/$Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Web</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.DataAnnotations</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>AnonReadSecureWriteWeb</AssemblyReference>
      <AssemblyReference>PsWorkflowDb</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>AnonReadSecureWrite</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <aa:Workflow.Implementation>
    <Sequence DisplayName="ROOT">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="CustomerId" />
        <Variable x:TypeArguments="x:String" Name="CustomerFirstName" />
        <Variable x:TypeArguments="x:String" Name="CustomerLastName" />
        <Variable x:TypeArguments="x:String" Name="CustomerEmail" />
        <Variable x:TypeArguments="x:Boolean" Name="IsNewCustomer" />
        <Variable x:TypeArguments="x:String" Name="AppWebUrl" />
        <Variable x:TypeArguments="x:String" Name="RemoteWebUrl" />
        <Variable x:TypeArguments="x:String" Name="ODataRequestEndpoint" />
        <Variable x:TypeArguments="p:DynamicValue" Name="ODataResponseBody" />
      </Sequence.Variables>
      <Sequence DisplayName="Get Customer Properties">
        <Sequence.Variables>
          <Variable x:TypeArguments="p:DynamicValue" Name="GetCustomerPropetiesResponse" />
          <Variable x:TypeArguments="x:String" Name="variable1" />
        </Sequence.Variables>
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Get Customer Properties">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                <p1:GetCurrentItemId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                <p1:GetCurrentListId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">GetCustomerPropetiesResponse</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="Extract Customer Properties">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">GetCustomerPropetiesResponse</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="Title">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerId</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="FirstName">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerFirstName</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LastNamePhonetic">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerLastName</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Email">
              <mca:CSharpReference x:TypeArguments="x:String">CustomerEmail</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Extracted customer properties: CustomerId=" + CustomerId +", FirstName=" +CustomerFirstName +", LastName=" +CustomerLastName +", Email=" +CustomerEmail</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
      </Sequence>
      <Assign DisplayName="Flag if new / existing customer">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">
            <mca:CSharpReference x:TypeArguments="x:Boolean">IsNewCustomer</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">!string.IsNullOrEmpty(CustomerFirstName) &amp;&amp; !string.IsNullOrEmpty(CustomerLastName)</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Get AppWeb URL">
        <p:SetUserStatus Description="Getting the AppWeb URL" />
        <p1:WebUri DisplayName="Get AppWeb URL">
          <p1:WebUri.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">AppWebUrl</mca:CSharpReference>
            </OutArgument>
          </p1:WebUri.Result>
        </p1:WebUri>
        <Assign>
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">AppWebUrl +"_api/web"</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Fetching AppWeb properties from: " +ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
        <p:HttpSend DisplayName="Get AppWeb Properties" Method="GET">
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get App Instance Unique URL" PropertyName="d/Url">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">AppWebUrl</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Unique URL of the instance of the installed app's AppWeb: " + AppWebUrl</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
      </Sequence>
      <Sequence DisplayName="Get RemoteWeb URL">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="AppInstanceId" />
          <Variable x:TypeArguments="x:String" Name="RelativeParentWebUrl" />
        </Sequence.Variables>
        <p:SetUserStatus Description="Getting the RemoteWeb URL" />
        <Assign DisplayName="OData URL for AppInstanceId">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">AppWebUrl +"/_api/web/appInstanceId"</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Getting the app instance ID from: " +ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
        <p:HttpSend DisplayName="Get AppInstanceId" Method="GET">
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Extract AppInstanceId" PropertyName="d/AppInstanceId">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">AppInstanceId</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Unique ID of this app instance: " +AppInstanceId</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
        <Assign DisplayName="OData URL for Relative ParentWeb">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">AppWebUrl + "/_api/web/parentWeb/serverRelativeUrl"</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Getting the AppWeb's parent web URL from: " +ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
        <p:HttpSend DisplayName="Get Relative ParentWeb URL" Method="GET">
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Extract Relative ParentWeb URL" PropertyName="d/ServerRelativeUrl">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">RelativeParentWebUrl</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Relative URL of the AppWeb's ParentWeb: " + RelativeParentWebUrl</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
        <Assign DisplayName="OData URL for RemoteWeb URL">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">AppWebUrl + "/_api/site/OpenWeb('" +RelativeParentWebUrl +"')/getAppInstanceById('" +AppInstanceId +"')/remoteAppUrl"</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Getting RemoteWeb URL from: " +ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
        <p:HttpSend DisplayName="Get RemoteWeb URL" Method="POST">
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Extract RemoteWeb URL" PropertyName="d/RemoteAppUrl">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">RemoteWebUrl</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:WriteToHistory>
          <p1:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"URL of the app's RemoteWeb: " +RemoteWebUrl</mca:CSharpValue>
            </InArgument>
          </p1:WriteToHistory.Message>
        </p1:WriteToHistory>
      </Sequence>
      <Flowchart DisplayName="Create or Get Customer">
        <Flowchart.StartNode>
          <FlowDecision x:Name="__ReferenceID2">
            <FlowDecision.Condition>
              <mca:CSharpValue x:TypeArguments="x:Boolean">IsNewCustomer</mca:CSharpValue>
            </FlowDecision.Condition>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID0">
                <Sequence DisplayName="Create New Customer">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="p:DynamicValue" Name="WebProxyPayload" />
                    <Variable x:TypeArguments="p:DynamicValue" Name="CustomerServiceRequestPayload" />
                    <Variable x:TypeArguments="x:String" Name="ODataRequestEndpoint" />
                    <Variable x:TypeArguments="p:DynamicValue" Name="ODataResponseBody" />
                  </Sequence.Variables>
                  <p:SetUserStatus Description="Creating Customer New" />
                  <Assign DisplayName="Build URL to Customer Service">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">RemoteWebUrl +"Customers.svc/Customers"</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <p1:WriteToHistory>
                    <p1:WriteToHistory.Message>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Customer service URL: " +ODataRequestEndpoint</mca:CSharpValue>
                      </InArgument>
                    </p1:WriteToHistory.Message>
                  </p1:WriteToHistory>
                  <p:BuildDynamicValue DisplayName="Create Customer Service Payload">
                    <p:BuildDynamicValue.Result>
                      <InOutArgument x:TypeArguments="p:DynamicValue">
                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">CustomerServiceRequestPayload</mca:CSharpReference>
                      </InOutArgument>
                    </p:BuildDynamicValue.Result>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument">
                      <InArgument x:TypeArguments="x:String" x:Key="FirstName">
                        <mca:CSharpValue x:TypeArguments="x:String">CustomerFirstName</mca:CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="LastName">
                        <mca:CSharpValue x:TypeArguments="x:String">CustomerLastName</mca:CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Email">
                        <mca:CSharpValue x:TypeArguments="x:String">CustomerEmail</mca:CSharpValue>
                      </InArgument>
                    </scg:Dictionary>
                  </p:BuildDynamicValue>
                  <p1:WriteToHistory>
                    <p1:WriteToHistory.Message>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Customer service payload: " + CustomerServiceRequestPayload.ToString()</mca:CSharpValue>
                      </InArgument>
                    </p1:WriteToHistory.Message>
                  </p1:WriteToHistory>
                  <Sequence DisplayName="Call Service via WebProxy">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:DynamicValue" Name="WebProxyResponseBody" />
                      <Variable x:TypeArguments="x:String" Name="WebProxyEndpoint" />
                      <Variable x:TypeArguments="x:String" Name="CustomerServiceResponseAsString" />
                      <Variable x:TypeArguments="p:DynamicValue" Name="WebProxyResponseHeaders" />
                    </Sequence.Variables>
                    <p:SetUserStatus Description="Calling Service via WebProxy" />
                    <Assign DisplayName="Build WebProxy URL">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String">WebProxyEndpoint</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">AppWebUrl +"/_api/SP.WebProxy.invoke"</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <p1:WriteToHistory>
                      <p1:WriteToHistory.Message>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">"Calling WebProxy at: " +WebProxyEndpoint</mca:CSharpValue>
                        </InArgument>
                      </p1:WriteToHistory.Message>
                    </p1:WriteToHistory>
                    <p:BuildDynamicValue DisplayName="Create WebProxy Payload">
                      <p:BuildDynamicValue.Result>
                        <InOutArgument x:TypeArguments="p:DynamicValue">
                          <mca:CSharpReference x:TypeArguments="p:DynamicValue">WebProxyPayload</mca:CSharpReference>
                        </InOutArgument>
                      </p:BuildDynamicValue.Result>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument">
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/__metadata/type">SP.WebRequestInfo</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Method">POST</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Url">
                          <mca:CSharpValue x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Body">
                          <mca:CSharpValue x:TypeArguments="x:String">CustomerServiceRequestPayload.ToString()</mca:CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(0)/__metadata/type">SP.KeyValue</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(0)/Key">SpAppWebUrl</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(0)/ValueType">Edm.String</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(0)/Value">
                          <mca:CSharpValue x:TypeArguments="x:String">AppWebUrl</mca:CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(1)/__metadata/type">SP.KeyValue</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(1)/Key">Accept</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(1)/Value">application/json;odata=verbose</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(1)/ValueType">Edm.String</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(2)/__metadata/type">SP.KeyValue</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(2)/Key">Content-Type</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(2)/Value">application/json;odata=verbose</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(2)/ValueType">Edm.String</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(3)/__metadata/type">SP.KeyValue</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(3)/Key">Content-Length</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(3)/Value">
                          <mca:CSharpValue x:TypeArguments="x:String">CustomerServiceRequestPayload.ToString().Length.ToString()</mca:CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="requestInfo/Headers/results(3)/ValueType">Edm.String</InArgument>
                      </scg:Dictionary>
                    </p:BuildDynamicValue>
                    <p:HttpSend DisplayName="Invoke WebProxy" Method="POST">
                      <p:HttpSend.RequestContent>
                        <InArgument x:TypeArguments="p:DynamicValue">
                          <mca:CSharpValue x:TypeArguments="p:DynamicValue">WebProxyPayload</mca:CSharpValue>
                        </InArgument>
                      </p:HttpSend.RequestContent>
                      <p:HttpSend.RequestHeaders>
                        <InArgument x:TypeArguments="p:DynamicValue">
                          <p:SetDynamicValueProperties>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument">
                              <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                            </scg:Dictionary>
                          </p:SetDynamicValueProperties>
                        </InArgument>
                      </p:HttpSend.RequestHeaders>
                      <p:HttpSend.ResponseContent>
                        <OutArgument x:TypeArguments="p:DynamicValue">
                          <mca:CSharpReference x:TypeArguments="p:DynamicValue">WebProxyResponseBody</mca:CSharpReference>
                        </OutArgument>
                      </p:HttpSend.ResponseContent>
                      <p:HttpSend.ResponseHeaders>
                        <OutArgument x:TypeArguments="p:DynamicValue">
                          <mca:CSharpReference x:TypeArguments="p:DynamicValue">WebProxyResponseHeaders</mca:CSharpReference>
                        </OutArgument>
                      </p:HttpSend.ResponseHeaders>
                      <p:HttpSend.Uri>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">WebProxyEndpoint</mca:CSharpValue>
                        </InArgument>
                      </p:HttpSend.Uri>
                    </p:HttpSend>
                  </Sequence>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID3">
                    <p1:WriteToHistory Message="Customer created." />
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID1">
                <Sequence DisplayName="Update Existing Customer">
                  <p:SetUserStatus Description="Getting Customer From Service" />
                  <Assign DisplayName="Build URL to Customer Service">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">RemoteWebUrl +"Customers.svc/Customers(" + CustomerId + ")"</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <p1:WriteToHistory>
                    <p1:WriteToHistory.Message>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Customer service URL: " +ODataRequestEndpoint</mca:CSharpValue>
                      </InArgument>
                    </p1:WriteToHistory.Message>
                  </p1:WriteToHistory>
                  <p:HttpSend DisplayName="Get Customer From Service" Method="GET">
                    <p:HttpSend.RequestHeaders>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:SetDynamicValueProperties>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                            <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                          </scg:Dictionary>
                        </p:SetDynamicValueProperties>
                      </InArgument>
                    </p:HttpSend.RequestHeaders>
                    <p:HttpSend.ResponseContent>
                      <OutArgument x:TypeArguments="p:DynamicValue">
                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpReference>
                      </OutArgument>
                    </p:HttpSend.ResponseContent>
                    <p:HttpSend.Uri>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">ODataRequestEndpoint</mca:CSharpValue>
                      </InArgument>
                    </p:HttpSend.Uri>
                  </p:HttpSend>
                  <p:SetUserStatus Description="Processing Customer Service Response" />
                  <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                    <p:GetODataProperties.Source>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <mca:CSharpValue x:TypeArguments="p:DynamicValue">ODataResponseBody</mca:CSharpValue>
                      </InArgument>
                    </p:GetODataProperties.Source>
                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                      <OutArgument x:TypeArguments="x:String" x:Key="FirstName">
                        <mca:CSharpReference x:TypeArguments="x:String">CustomerFirstName</mca:CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="LastName">
                        <mca:CSharpReference x:TypeArguments="x:String">CustomerLastName</mca:CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="Email">
                        <mca:CSharpReference x:TypeArguments="x:String">CustomerEmail</mca:CSharpReference>
                      </OutArgument>
                    </scg:Dictionary>
                  </p:GetODataProperties>
                  <p1:WriteToHistory>
                    <p1:WriteToHistory.Message>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Received customer '" + CustomerFirstName + " " + CustomerLastName +" (" + CustomerEmail + ")"</mca:CSharpValue>
                      </InArgument>
                    </p1:WriteToHistory.Message>
                  </p1:WriteToHistory>
                  <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Customer Item">
                    <p1:UpdateListItem.ItemId>
                      <InArgument x:TypeArguments="x:Int32">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                          <p1:GetCurrentItemId />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:UpdateListItem.ItemId>
                    <p1:UpdateListItem.ListId>
                      <InArgument x:TypeArguments="s:Guid">
                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                          <p1:GetCurrentListId />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:UpdateListItem.ListId>
                    <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:SetDynamicValueProperties>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                            <InArgument x:TypeArguments="x:String" x:Key="FirstName">
                              <mca:CSharpValue x:TypeArguments="x:String">CustomerFirstName</mca:CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="LastNamePhonetic">
                              <mca:CSharpValue x:TypeArguments="x:String">CustomerLastName</mca:CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Email">
                              <mca:CSharpValue x:TypeArguments="x:String">CustomerEmail</mca:CSharpValue>
                            </InArgument>
                          </scg:Dictionary>
                        </p:SetDynamicValueProperties>
                      </InArgument>
                    </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                  </p1:UpdateListItem>
                  <p1:WriteToHistory Message="Customer Updated" />
                </Sequence>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </Flowchart.StartNode>
        <x:Reference>__ReferenceID0</x:Reference>
        <x:Reference>__ReferenceID1</x:Reference>
        <x:Reference>__ReferenceID2</x:Reference>
        <x:Reference>__ReferenceID3</x:Reference>
      </Flowchart>
      <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
    </Sequence>
  </aa:Workflow.Implementation>
</aa:Workflow>